{"ast":null,"code":"var _jsxFileName = \"/Users/reginaschmidt/Documents/Web-Projects/web_projects_backend/iCoderName/name-generator/src/AddWords.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddWords() {\n  _s();\n\n  const [adjective, setAdjective] = useState(null);\n  const [noun, setNoun] = useState(null);\n  const [newWord, setNewWord] = useState(\"\");\n  const [sendReady, setSendReady] = useState(false);\n  const [data, setData] = useState({});\n\n  const makePost = () => {\n    if (adjective) {\n      // fetch(\"http://localhost:5002/namelist/adjective\", {\n      fetch(\"https://namelist.herokuapp.com/namelist/adjective\", {\n        method: \"POST\",\n        header: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          msg: {\n            newWord\n          }\n        })\n      }).then(() => {\n        console.log(\"new adjective added:\", JSON.stringify(newWord));\n      }).then(() => setSendReady(false)).then(() => setNewWord(\"\"));\n    }\n\n    if (noun) {\n      fetch(\"http://localhost:5002/namelist/noun\", {\n        // fetch(\"https://namelist.herokuapp.com/namelist/noun\", {\n        method: \"POST\",\n        header: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          msg: {\n            newWord\n          }\n        })\n      }).then(response => {\n        console.log(\"new noun added:\", JSON.stringify(newWord));\n        setData(response);\n      }).then(() => setSendReady(false)).then(() => setNewWord(\"\"));\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    if (sendReady) {\n      makePost();\n    }\n  }, [sendReady]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" I want to add: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonAddBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setAdjective(true, setNoun(false));\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: adjective || adjective === null ? \"buttonAdd\" : \"buttonAddNo\",\n          children: \"an adjective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setNoun(true, setAdjective(false));\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: noun || noun === null ? \"buttonAdd\" : \"buttonAddNo\",\n          children: \"a noun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), noun || adjective ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        setSendReady(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newWord,\n        onChange: e => setNewWord(e.target.value),\n        placeholder: adjective ? \"Enter <adjective> here\" : \"Enter <noun> here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sendInput\",\n        value: \"Send\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddWords, \"wf3BnZITdQK1U2FUkCx55xf9R+g=\");\n\n_c = AddWords;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWords\");","map":{"version":3,"names":["React","useEffect","useState","AddWords","adjective","setAdjective","noun","setNoun","newWord","setNewWord","sendReady","setSendReady","data","setData","makePost","fetch","method","header","body","JSON","stringify","msg","then","console","log","response","e","preventDefault","target","value"],"sources":["/Users/reginaschmidt/Documents/Web-Projects/web_projects_backend/iCoderName/name-generator/src/AddWords.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function AddWords() {\n  const [adjective, setAdjective] = useState(null);\n  const [noun, setNoun] = useState(null);\n  const [newWord, setNewWord] = useState(\"\");\n  const [sendReady, setSendReady] = useState(false);\n  const [data, setData] = useState({});\n\n  const makePost = () => {\n      if (adjective) {\n    // fetch(\"http://localhost:5002/namelist/adjective\", {\n      fetch(\"https://namelist.herokuapp.com/namelist/adjective\", {\n      method: \"POST\",\n      header: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        msg: { newWord },\n      }),\n    }).then(() => {\n      console.log(\"new adjective added:\", JSON.stringify(newWord));\n    })\n    .then(() => setSendReady(false))\n    .then(() => setNewWord(\"\"))\n}\nif (noun) {\n    fetch(\"http://localhost:5002/namelist/noun\", {\n      // fetch(\"https://namelist.herokuapp.com/namelist/noun\", {\n      method: \"POST\",\n      header: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        msg: { newWord },\n      }),\n    }).then((response) => {\n      console.log(\"new noun added:\", JSON.stringify(newWord));\n      setData(response);\n    })\n    .then(() => setSendReady(false))\n    .then(() => setNewWord(\"\"))\n  };\n}\n\n  useEffect(() => {\n    if (sendReady) {\n      makePost();\n    }\n  }, [sendReady]);\n\n  return (\n    <div className=\"container\">\n      <h4> I want to add: </h4>\n\n      <div className=\"buttonAddBox\">\n        <div\n          onClick={() => {\n            setAdjective(true, setNoun(false));\n          }}\n        >\n          {\" \"}\n          <div\n            className={\n              adjective || adjective === null ? \"buttonAdd\" : \"buttonAddNo\"\n            }\n          >\n            an adjective\n          </div>\n        </div>\n        <div\n          onClick={() => {\n            setNoun(true, setAdjective(false));\n          }}\n        >\n          {\" \"}\n          <div className={noun || noun === null ? \"buttonAdd\" : \"buttonAddNo\"}>\n            a noun\n          </div>\n        </div>\n      </div>\n\n      {noun || adjective ? \n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          setSendReady(true);\n        }}\n      >\n        <input value={newWord}\n          onChange={(e) => setNewWord(e.target.value)}\n          placeholder={adjective ? \"Enter <adjective> here\" : \"Enter <noun> here\"}\n        ></input>\n        <input className=\"sendInput\" value=\"Send\" type=\"submit\"></input>\n      </form>\n: null}\n\n      {/* {newWord} */}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}